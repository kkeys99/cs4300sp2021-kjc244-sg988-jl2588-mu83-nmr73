{"version":3,"sources":["components/Bar.tsx","components/Search.tsx","components/ChipPicker.tsx","components/AdvancedSearch.tsx","components/ResultsTable.tsx","api/search.ts","api/index.ts","images/podcast.jpg","components/Home.tsx","components/App.tsx","index.tsx"],"names":["useStyles","makeStyles","bar","display","justifyContent","margin","props","barHeight","overflow","Bar","classes","className","children","icon","color","padding","search","alignItems","borderRadius","background","width","inputStyles","disableUnderline","style","Search","query","setQuery","TextField","fullWidth","placeholder","value","onChange","e","target","InputProps","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","getStyles","item","selected","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","formControl","minWidth","maxWidth","chips","flexWrap","chip","fontSize","height","ChipPicker","dropdownValues","genres","setGenres","useTheme","FormControl","InputLabel","id","Select","labelId","multiple","event","input","Input","renderValue","map","Chip","label","MenuItem","genreList","card","searchHeader","paddingBottom","actions","flexDirection","AdvancedSearch","searchCallback","useState","duration","setDuration","publisher","setPublisher","year","setYear","Card","CardContent","Typography","Grid","container","spacing","xs","ampm","autoOk","variant","views","maxDate","Date","CardActions","Button","onClick","table","getDurationString","seconds","minutes","_","floor","secs","padStart","toString","ResultsTable","results","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","row","scope","name","description","capitalize","genre","duration_ms","getYear","parse","release_date","searchPodcasts","a","durationString","format","yearString","api","post","data","axios","create","baseURL","backgroundImage","BackgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","layer","position","top","bottom","left","right","overlay","backgroundColor","zIndex","Home","dataResults","setData","Container","App","utils","DateFnsUtils","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.a8f65252.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\n\nexport interface BarProps {\n  barHeight: number;\n  children: React.ReactNode;\n}\n\nconst useStyles = makeStyles({\n  bar: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    margin: (props: BarProps) => `${props.barHeight}px 0px`,\n    overflow: \"auto\",\n  },\n});\n\nexport const Bar = (props: BarProps) => {\n  const classes = useStyles(props);\n  return <div className={classes.bar}>{props.children}</div>;\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nexport interface SearchProps {\n  query: string;\n  setQuery: (val: string) => void;\n}\n\nconst useStyles = makeStyles({\n  icon: {\n    color: \"white\",\n    padding: \"0 10px\",\n  },\n  search: {\n    alignItems: \"center\",\n    borderRadius: \"4px\",\n    background: \"#3b9e66\",\n    display: \"flex\",\n    width: \"28.75rem\",\n  },\n});\n\nconst inputStyles = {\n  disableUnderline: true,\n  style: {\n    color: \"white\",\n  },\n};\n\nexport const Search = ({ query, setQuery }: SearchProps) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.search}>\n      <SearchIcon className={classes.icon} />\n      <TextField\n        fullWidth\n        margin=\"normal\"\n        placeholder=\"Enter a query...\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        InputProps={inputStyles}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { makeStyles, Theme, useTheme } from \"@material-ui/core/styles\";\n\nexport interface ChipProps {\n  dropdownValues: Array<string>;\n  genres: Array<string>;\n  setGenres: (val: Array<string>) => void;\n}\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst getStyles = (item: string, selected: Array<string>, theme: Theme) => {\n  return {\n    fontWeight:\n      selected.indexOf(item) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n};\n\nconst useStyles = makeStyles({\n  formControl: {\n    minWidth: 167,\n    maxWidth: 300,\n  },\n  chips: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  chip: {\n    fontSize: 12,\n    margin: 2,\n    height: 20,\n  },\n});\n\nexport const ChipPicker = ({\n  dropdownValues,\n  genres,\n  setGenres,\n}: ChipProps) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel id=\"multiple-chip-label\">Genres</InputLabel>\n      <Select\n        labelId=\"multiple-chip-label\"\n        id=\"multiple-chip\"\n        multiple\n        value={genres}\n        onChange={(event) => setGenres(event.target.value as Array<string>)}\n        input={<Input id=\"select-multiple-chip\" />}\n        renderValue={(selected: any) => (\n          <div className={classes.chips}>\n            {selected.map((value: any) => (\n              <Chip key={value} label={value} className={classes.chip} />\n            ))}\n          </div>\n        )}\n        MenuProps={MenuProps}\n      >\n        {dropdownValues.map((item) => (\n          <MenuItem\n            key={item}\n            value={item}\n            style={getStyles(item, genres, theme)}\n          >\n            {item}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { KeyboardTimePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ChipPicker } from \"./ChipPicker\";\n\nexport interface AdvancedSearchProps {\n  searchCallback: (\n    duration: Date | null,\n    genres: Array<string>,\n    publisher: string | null,\n    year: Date | null\n  ) => void;\n}\n\nconst genreList = [\n  \"Arts & Entertainment\",\n  \"Business & Technology\",\n  \"Comedy\",\n  \"Educational\",\n  \"Fiction\",\n  \"Games\",\n  \"Lifestyle & Health\",\n  \"History\",\n  \"Kids & Family\",\n  \"Leisure\",\n  \"Music\",\n  \"News & Politics\",\n  \"Religion & Spirituality\",\n  \"Science\",\n  \"Society & Culture\",\n  \"Sports & Recreation\",\n  \"Stories\",\n  \"TV & Film\",\n  \"Technology\",\n  \"True Crime\",\n];\n\nconst useStyles = makeStyles({\n  card: {\n    width: \"28.75rem\",\n  },\n  searchHeader: {\n    paddingBottom: \"0.6rem\",\n  },\n  actions: {\n    flexDirection: \"row-reverse\",\n  },\n});\n\nexport const AdvancedSearch = ({ searchCallback }: AdvancedSearchProps) => {\n  const classes = useStyles();\n  const [duration, setDuration] = useState<Date | null>(null);\n  const [genres, setGenres] = useState<Array<string>>([]);\n  const [publisher, setPublisher] = useState<string | null>(null);\n  const [year, setYear] = useState<Date | null>(null);\n\n  const resetFields = () => {\n    setYear(null);\n    setGenres([]);\n    setDuration(null);\n    setPublisher(null);\n  };\n\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography className={classes.searchHeader}>\n          Advanced Search\n        </Typography>\n        <Grid container alignItems=\"flex-end\" spacing={3}>\n          <Grid item xs={6}>\n            <KeyboardTimePicker\n              ampm={false}\n              autoOk\n              label=\"Duration (hh:mm)\"\n              value={duration}\n              variant=\"inline\"\n              onChange={setDuration}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <ChipPicker\n              dropdownValues={genreList}\n              genres={genres}\n              setGenres={setGenres}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              label=\"Publisher\"\n              value={publisher || \"\"}\n              onChange={(e) => setPublisher(e.target.value)}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <KeyboardDatePicker\n              autoOk\n              views={[\"year\"]}\n              label=\"Year\"\n              value={year}\n              maxDate={new Date()}\n              onChange={setYear}\n            />\n          </Grid>\n        </Grid>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button\n          onClick={() => searchCallback(duration, genres, publisher, year)}\n        >\n          Search\n        </Button>\n        <Button onClick={resetFields}>Reset</Button>\n      </CardActions>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport _ from \"lodash\";\nimport getYear from \"date-fns/getYear\";\nimport parse from \"date-fns/parse\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ResponseObject } from \"api\";\n\nexport interface ResultsTableProps {\n  results: Array<ResponseObject>;\n}\n\nconst useStyles = makeStyles({\n  table: {\n    margin: \"auto\",\n  },\n});\n\nconst getDurationString = (duration: number) => {\n  const seconds = duration / 1000;\n  const minutes = _.floor(seconds / 60);\n  const secs = _.floor(seconds % 60);\n  return `${minutes}:${_.padStart(secs.toString(), 2, \"0\")}`;\n};\n\nexport const ResultsTable = ({ results }: ResultsTableProps) => {\n  const classes = useStyles();\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell>Description</TableCell>\n            <TableCell>Genre</TableCell>\n            <TableCell>Duration</TableCell>\n            <TableCell>Year</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {results.map((row) => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell>{row.description}</TableCell>\n              <TableCell>{_.capitalize(row.genre)}</TableCell>\n              <TableCell>{getDurationString(row.duration_ms)}</TableCell>\n              <TableCell>\n                {getYear(parse(row.release_date, \"yyyy-MM-dd\", new Date()))}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import api from \"api\";\nimport format from \"date-fns/format\";\n\nexport interface ResponseObject {\n  description: string;\n  duration_ms: number;\n  genre: string;\n  id: string;\n  name: string;\n  publisher: string;\n  release_date: string;\n  show_id: string;\n  show_rank: string;\n}\n\nexport const searchPodcasts = async (\n  query: string,\n  duration: Date | null,\n  genres: Array<string>,\n  publisher: string | null,\n  year: Date | null\n) => {\n  const durationString = duration ? format(duration, \"HH:mm\") : duration;\n  const yearString = year ? format(year, \"yyyy\") : year;\n  const { data } = await api.post<Array<ResponseObject>>(\"search\", {\n    query,\n    duration: durationString,\n    genres,\n    publisher,\n    year: yearString,\n  });\n  return data;\n};\n","import axios from \"axios\";\n\nexport * from \"./search\";\n\nexport default axios.create({\n  baseURL: \"http://listen-and-learn.herokuapp.com/\",\n});\n","export default __webpack_public_path__ + \"static/media/podcast.b89d93f4.jpg\";","import React, { useState } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Bar } from \"./Bar\";\nimport { Search } from \"./Search\";\nimport { AdvancedSearch } from \"./AdvancedSearch\";\nimport { ResultsTable } from \"./ResultsTable\";\nimport { searchPodcasts, ResponseObject } from \"api\";\nimport BackgroundImage from \"images/podcast.jpg\";\n\nconst useStyles = makeStyles({\n  background: {\n    backgroundImage: `url(${BackgroundImage})`,\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"bottom\",\n  },\n  layer: {\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n  },\n  overlay: {\n    backgroundColor: \"rgba(73, 187, 111, 0.9)\",\n    zIndex: 10,\n  },\n});\n\nexport const Home = () => {\n  const classes = useStyles();\n  const [query, setQuery] = useState(\"\");\n  const [dataResults, setData] = useState<Array<ResponseObject> | null>(null);\n\n  const searchCallback = async (\n    duration: Date | null,\n    genres: Array<string>,\n    publisher: string | null,\n    year: Date | null\n  ) => {\n    const results = await searchPodcasts(\n      query,\n      duration,\n      genres,\n      publisher,\n      year\n    );\n    setData(results);\n  };\n\n  return (\n    <Container>\n      <div className={`${classes.layer} ${classes.overlay}`}>\n        <Bar barHeight={25}>\n          <Typography variant=\"h1\">Spotify Podcast Search</Typography>\n        </Bar>\n        <Bar barHeight={25}>\n          <Search query={query} setQuery={setQuery} />\n        </Bar>\n        <Bar barHeight={25}>\n          <AdvancedSearch searchCallback={searchCallback} />\n        </Bar>\n        <Bar barHeight={25}>\n          {dataResults && <ResultsTable results={dataResults} />}\n        </Bar>\n      </div>\n      <div className={`${classes.layer} ${classes.background}`} />\n    </Container>\n  );\n};\n","import React from \"react\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { Home } from \"./Home\";\n\nexport const App = () => {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Home />\n    </MuiPickersUtilsProvider>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"components/App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}