{"version":3,"sources":["components/Bar.tsx","components/Search.tsx","components/ChipPicker.tsx","components/AdvancedSearch.tsx","images/podcast.jpg","components/Home.tsx","components/App.tsx","index.tsx"],"names":["useStyles","makeStyles","bar","display","justifyContent","margin","props","barHeight","overflow","Bar","classes","className","children","icon","color","padding","search","alignItems","borderRadius","background","width","inputStyles","disableUnderline","style","Search","TextField","fullWidth","placeholder","InputProps","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","getStyles","item","selected","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","formControl","minWidth","maxWidth","chips","flexWrap","chip","fontSize","height","ChipPicker","dropdownValues","genres","setGenres","useTheme","FormControl","InputLabel","id","Select","labelId","multiple","value","onChange","event","target","input","Input","renderValue","map","Chip","label","MenuItem","genreList","card","searchHeader","paddingBottom","actions","flexDirection","AdvancedSearch","useState","duration","setDuration","publisher","setPublisher","year","setYear","Card","CardContent","Typography","Grid","container","spacing","xs","ampm","autoOk","variant","e","views","maxDate","Date","CardActions","Button","onClick","backgroundImage","BackgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","layer","position","top","bottom","left","right","overlay","backgroundColor","zIndex","Home","Container","App","utils","DateFnsUtils","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.7e318f11.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\n\nexport interface BarProps {\n  barHeight: number;\n  children: React.ReactNode;\n}\n\nconst useStyles = makeStyles({\n  bar: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    margin: (props: BarProps) => `${props.barHeight}px 0px`,\n    overflow: \"auto\",\n  },\n});\n\nexport const Bar = (props: BarProps) => {\n  const classes = useStyles(props);\n  return <div className={classes.bar}>{props.children}</div>;\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles({\n  icon: {\n    color: \"white\",\n    padding: \"0 10px\",\n  },\n  search: {\n    alignItems: \"center\",\n    borderRadius: \"4px\",\n    background: \"#3b9e66\",\n    display: \"flex\",\n    width: \"28.75rem\",\n  },\n});\n\nconst inputStyles = {\n  disableUnderline: true,\n  style: {\n    color: \"white\",\n  },\n};\n\nexport const Search = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.search}>\n      <SearchIcon className={classes.icon} />\n      <TextField\n        fullWidth\n        margin=\"normal\"\n        placeholder=\"Enter a query...\"\n        InputProps={inputStyles}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { makeStyles, Theme, useTheme } from \"@material-ui/core/styles\";\n\nexport interface ChipProps {\n  dropdownValues: Array<string>;\n  genres: Array<string>;\n  setGenres: (val: Array<string>) => void;\n}\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst getStyles = (item: string, selected: Array<string>, theme: Theme) => {\n  return {\n    fontWeight:\n      selected.indexOf(item) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n};\n\nconst useStyles = makeStyles({\n  formControl: {\n    minWidth: 167,\n    maxWidth: 300,\n  },\n  chips: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  chip: {\n    fontSize: 12,\n    margin: 2,\n    height: 20,\n  },\n});\n\nexport const ChipPicker = ({\n  dropdownValues,\n  genres,\n  setGenres,\n}: ChipProps) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel id=\"multiple-chip-label\">Genres</InputLabel>\n      <Select\n        labelId=\"multiple-chip-label\"\n        id=\"multiple-chip\"\n        multiple\n        value={genres}\n        onChange={(event) => setGenres(event.target.value as Array<string>)}\n        input={<Input id=\"select-multiple-chip\" />}\n        renderValue={(selected: any) => (\n          <div className={classes.chips}>\n            {selected.map((value: any) => (\n              <Chip key={value} label={value} className={classes.chip} />\n            ))}\n          </div>\n        )}\n        MenuProps={MenuProps}\n      >\n        {dropdownValues.map((item) => (\n          <MenuItem\n            key={item}\n            value={item}\n            style={getStyles(item, genres, theme)}\n          >\n            {item}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { KeyboardTimePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ChipPicker } from \"./ChipPicker\";\n\nconst genreList = [\n  \"Arts & Entertainment\",\n  \"Business & Technology\",\n  \"Comedy\",\n  \"Educational\",\n  \"Fiction\",\n  \"Games\",\n  \"Lifestyle & Health\",\n  \"History\",\n  \"Kids & Family\",\n  \"Leisure\",\n  \"Music\",\n  \"News & Politics\",\n  \"Religion & Spirituality\",\n  \"Science\",\n  \"Society & Culture\",\n  \"Sports & Recreation\",\n  \"Stories\",\n  \"TV & Film\",\n  \"Technology\",\n  \"True Crime\",\n];\n\nconst useStyles = makeStyles({\n  card: {\n    width: \"28.75rem\",\n  },\n  searchHeader: {\n    paddingBottom: \"0.6rem\",\n  },\n  actions: {\n    flexDirection: \"row-reverse\",\n  },\n});\n\nexport const AdvancedSearch = () => {\n  const classes = useStyles();\n  const [duration, setDuration] = useState<Date | null>(null);\n  const [genres, setGenres] = useState<Array<string>>([]);\n  const [publisher, setPublisher] = useState<string | null>(null);\n  const [year, setYear] = useState<Date | null>(null);\n\n  const resetFields = () => {\n    setYear(null);\n    setGenres([]);\n    setDuration(null);\n    setPublisher(null);\n  };\n\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography className={classes.searchHeader}>\n          Advanced Search\n        </Typography>\n        <Grid container alignItems=\"flex-end\" spacing={3}>\n          <Grid item xs={6}>\n            <KeyboardTimePicker\n              ampm={false}\n              autoOk\n              label=\"Duration (hh:mm)\"\n              value={duration}\n              variant=\"inline\"\n              onChange={setDuration}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <ChipPicker\n              dropdownValues={genreList}\n              genres={genres}\n              setGenres={setGenres}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              label=\"Publisher\"\n              value={publisher || \"\"}\n              onChange={(e) => setPublisher(e.target.value)}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <KeyboardDatePicker\n              autoOk\n              views={[\"year\"]}\n              label=\"Year\"\n              value={year}\n              maxDate={new Date()}\n              onChange={setYear}\n            />\n          </Grid>\n        </Grid>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button>Search</Button>\n        <Button onClick={resetFields}>Reset</Button>\n      </CardActions>\n    </Card>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/podcast.b89d93f4.jpg\";","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Bar } from \"./Bar\";\nimport { Search } from \"./Search\";\nimport { AdvancedSearch } from \"./AdvancedSearch\";\nimport BackgroundImage from \"images/podcast.jpg\";\n\nconst useStyles = makeStyles({\n  background: {\n    backgroundImage: `url(${BackgroundImage})`,\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"bottom\",\n  },\n  layer: {\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n  },\n  overlay: {\n    backgroundColor: \"rgba(73, 187, 111, 0.9)\",\n    zIndex: 10,\n  },\n});\n\nexport const Home = () => {\n  const classes = useStyles();\n  return (\n    <Container>\n      <div className={`${classes.layer} ${classes.overlay}`}>\n        <Bar barHeight={25}>\n          <Typography variant=\"h1\">Spotify Podcast Search</Typography>\n        </Bar>\n        <Bar barHeight={25}>\n          <Search />\n        </Bar>\n        <Bar barHeight={25}>\n          <AdvancedSearch />\n        </Bar>\n      </div>\n      <div className={`${classes.layer} ${classes.background}`} />\n    </Container>\n  );\n};\n","import React from \"react\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { Home } from \"./Home\";\n\nexport const App = () => {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Home />\n    </MuiPickersUtilsProvider>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"components/App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}